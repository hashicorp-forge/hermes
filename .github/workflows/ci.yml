name: CI
on: [push]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup with node and yarn
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache-dependency-path: "web/yarn.lock"

      - name: Set yarn version
        run: make web/set-yarn-version

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "^1.18"

      - name: Build web
        run: make web/build

      - name: Run web test
        run: make web/test

      - name: Build
        run: make bin/linux

      - name: Run Go test
        run: make go/test

#   cancel:
#     runs-on: [ self-hosted ]
#     name: Cancel Previous Runs
#     if: always()
#     steps:
#       - uses: styfle/cancel-workflow-action@d57d93c3a8110b00c3a2c0b64b8516013c9fd4c9
#         if: github.ref != 'refs/heads/master'
#         name: cancel old workflows
#         id: cancel
#         with:
#           access_token: ${{ secrets.GITHUB_TOKEN }}
#       - if: github.ref == 'refs/heads/master'
#         name: Don't cancel old workflows
#         id: dont_cancel
#         run: |
#           echo "Don't cancel old workflow"

  build-docker-server:
    runs-on: [self-hosted]
    name: Build docker image for the server
    continue-on-error: false
    steps:
      - name: Login to Harbor
        uses: docker/login-action@v1
        with:
          registry: c.rzp.io
          username: ${{ secrets.HARBOR_DOCKER_USERNAME }}
          password: ${{ secrets.HARBOR_DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Set date and commit ID as tag
        run: |
          echo "CURRENT_DATE=$(date +"%Y%m%d")" >> $GITHUB_ENV
          echo "COMMIT_ID=${GITHUB_SHA:0:7}" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          tags: c.rzp.io/razorpay/docvault:server-${{ env.CURRENT_DATE }}-${{ github.sha }}
          push: true
          file: Dockerfile.server
          target: prod-api
          secrets: |
            GIT_TOKEN=${{ secrets.GIT_TOKEN }}
          build-args: |
            GIT_COMMIT_HASH=${{ github.sha }}
            GIT_USERNAME=rzp
  
  build-docker-indexer:
    runs-on: [self-hosted]
    name: Build docker image for the indexer
    continue-on-error: false
    steps:
      - name: Login to Harbor
        uses: docker/login-action@v1
        with:
          registry: c.rzp.io
          username: ${{ secrets.HARBOR_DOCKER_USERNAME }}
          password: ${{ secrets.HARBOR_DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Set date and commit ID as tag
        run: |
          echo "CURRENT_DATE=$(date +"%Y%m%d")" >> $GITHUB_ENV
          echo "COMMIT_ID=${GITHUB_SHA:0:7}" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          tags: c.rzp.io/razorpay/docvault:indexer-${{ env.CURRENT_DATE }}-${{ github.sha }}
          push: true
          file: Dockerfile.indexer
          target: prod-api
          secrets: |
            GIT_TOKEN=${{ secrets.GIT_TOKEN }}
          build-args: |
            GIT_COMMIT_HASH=${{ github.sha }}
            GIT_USERNAME=rzp


  workflow_status:
    runs-on: [self-hosted]
    continue-on-error: false
    name: Update Status Check
    needs: [ build-docker-indexer, build-docker-server ]
    if: always()
    steps:
      - name: Failed
        id: failed
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: |
          echo 'Failing the workflow for github status check.'
          curl -X POST -H "Content-Type: application/json" -H "Authorization: token ${{ github.token }}" \
          -d '{ "state" : "failure" , "context" : "github/combined-status-check" , "description" : "github/combined-status-check", "target_url" : "https://github.com/${{ github.repository }}" }' \
          https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }}
          exit 1
      - name: Success
        if: steps.failed.conclusion == 'skipped'
        run: |
          echo 'Status check has passed!'
          curl -X POST -H "Content-Type: application/json" -H "Authorization: token ${{ github.token }}" \
          -d '{ "state" : "success" , "context" : "github/combined-status-check" , "description" : "github/combined-status-check", "target_url" : "https://github.com/${{ github.repository }}" }' \
          https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }}
          exit 0
